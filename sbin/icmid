#!/usr/bin/php
<?php
 require_once(dirname(__FILE__)."/../inc/config.inc.php");
 require_once(dirname(__FILE__)."/../libs/autoload.lib.php");
 require_once(dirname(__FILE__)."/../libs/daemon.obj.php");

 class iCMId implements Daemonizable {
  private $_lrun = 0;
  private $_crun = 0;
  private $_jexec = 0;
  private $_interval = 60;
  private $_logfd = 0;
  public  $debug = false;

  /* Main run () */
  public function run() {

    $this->log("Entering run()");

    /* update last run time */
    $this->_lrun = $this->_crun;
    $this->_crun = date("U");

    $this->log("Previous run: ".$this->_lrun);
    $this->log("New run: ".$this->_crun);
    
    /* fetching devices */
    $jlist = array();
    $index = "`id`";
    $table = "jobs";
    $where = "";
    $m = mysqlCM::getInstance();
    if (($idx = $m->fetchIndex($index, $table, $where)))
    {
      foreach($idx as $t) {
        $j = new Job($t["id"], $this);
        $j->fetchFromId();
        array_push($jlist, $j);
      }
    }
    $this->log("Jobs loaded: ".count($jlist));
    foreach ($jlist as $j) {
      $this->log("Trying to execute job \"".$j->name."\" function: ".$j->function);
      $j->runJob();
    }

    $this->log("sleeping..");
    sleep($this->_interval);
    return 0;
  }

  public function start() {
    $this->openLog();
    $m = mysqlCM::getInstance();
    if ($m->connect()) {
      die($argv[0]." Error with SQL db: ".$m->getError()."\n");
    }
  }

  public function cleanup() {
    $this->closeLog();
  }

  /* Signal management */

  public function sigterm() {
    $this->cleanup();
    exit(-1);
  }

  public function sighup() {
  }
 
  public function sigkill() {
    $this->cleanup();
    exit(-1);
  }

  public function sigusr1() {
  }

  public function sigusr2() {
  }

  public function help() {
    global $argv;
    echo "$argv[0] [-hvf]\n";
  }

  /* Log management */

  private function openLog() {
    global $config; 

    if (!($this->_logfd = fopen($config['icmid']['log'], 'w'))) {
      $this->log("Cannot open ".$config['icmid']['log']." for logging!");
      return;
    }
    $this->log("Opened ".$config['icmid']['log']." for logging!");
  }

  private function closeLog() {

    if ($this->_logfd) {
      $this->log("Closing ".$config['icmid']['log']."!");
      fclose($this->_logfd);
      $this->_logfd = 0;
    }
  }

  public function log($m) {
    if ($this->debug) {
      echo "$m\n";
    }
    if ($this->_logfd) {
      fprintf($this->_logfd, "[%s] %s\n", date("Y-m-d M:i:s"), $m);
    }
  }

 }



 $icmi = new iCMId();

 $opts = "vhf";
 $options = getopt($opts);

 if (isset($options["h"])) {
  $icmi->help();
  exit(0);
 }

 if (isset($options["v"])) {
   $icmi->debug = true;
 } else {
   $icmi->debug = false;
 }

 if (isset($options["f"])) {
  $o['f'] = true;
 } else {
  $o['f'] = false;
 }

 $daemon = new Daemon($icmi, $o['f']);  

?>
